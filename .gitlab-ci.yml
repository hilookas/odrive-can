before_script:
  - python --version
  - cat /build_date.txt
  - pip install .

stages:
  - test_stage
  - package_stage
  - docker_images

pytest:
  image: $CI_REGISTRY_IMAGE
  stage: test_stage
  script:
    - pylint -E src
    # - mypy src
    - pytest -v tests
  artifacts:
    when: on_success
    expire_in: 5 days
  rules:
    - changes:
        - src/**/*

pages:
  image: sjev/mkdocs
  stage: package_stage
  script:
    - make public
  artifacts:
    paths:
      - public
    expire_in: 1 week
  rules:
    - changes:
        - "*.md"
        - docs/**/*
        - "mkdocs.yml"

package:
  stage: package_stage
  script:
    - pip install build twine
    - python -m build
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  rules:
    - if: $CI_COMMIT_TAG

# build docker containers
build_images:
  stage: docker_images
  image: docker:latest

  services:
    - docker:dind

  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    # ---- main image
    - docker build -t $CI_REGISTRY_IMAGE  ./docker
    - docker push $CI_REGISTRY_IMAGE
  when: manual
